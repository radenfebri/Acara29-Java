/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import Model.Koneksi;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author febri
 */
public class FormPenjual extends javax.swing.JFrame {

    /**
     * Creates new form FormPenjualan
     */
    
    private String id_penjual;
    
    public FormPenjual() {
        initComponents();
        load_table();
    }
    
    // memunculkan tabel ke dalam interface JTable
    private void load_table() {
//        membuat object baru
        DefaultTableModel model = new DefaultTableModel();
//        membuat column untuk field tabel
        model.addColumn("No. Penjual");
        model.addColumn("Nama Penjual");
        model.addColumn("Email");
        model.addColumn("Alamat");
        model.addColumn("Nomor HP");
        model.addColumn("Password");

//        mengambil data dari database
        try {
            String sql = "SELECT * from tb_penjual"; // variable berisi query SQL
            java.sql.Connection conn = (Connection) Koneksi.koneksiDB(); // membuat koneksi baru ke database
            java.sql.Statement stm = conn.createStatement(); // membuat SQL server statement untuk dikirm ke database
            java.sql.ResultSet res = stm.executeQuery(sql); // mengeksekusi statement SQL
//            membuat looping untuk menampilkan semua baris data
            while (res.next()) {
                model.addRow(new Object[]{
                    res.getInt(1), 
                    res.getString(2), 
                    res.getString(3),
                    res.getString(4),
                    res.getString(5),
                    res.getString(6),
                });
            }
//            menampilkan data di console untuk debuging
            System.out.println("Data: " + res);
//            mengisi Jtabel
            TbPenjual.setModel(model);
        } catch (Exception e) {
//            menampilkan eror di console
            System.out.println("Error Found: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        NamaPenjual = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        AlamatPenjual = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        NoHp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TbPenjual = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Password = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("PENJUAL");

        NamaPenjual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaPenjualActionPerformed(evt);
            }
        });

        jLabel9.setText("Nama Penjual");

        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });

        jLabel10.setText("Email");

        AlamatPenjual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlamatPenjualActionPerformed(evt);
            }
        });

        jLabel11.setText("Alamat");

        NoHp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoHpActionPerformed(evt);
            }
        });

        jLabel12.setText("No HP");

        Add.setText("ADD");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Update.setText("UPDATE");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Clear.setText("CLEAR");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        TbPenjual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TbPenjual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbPenjualMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TbPenjual);

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });

        jLabel13.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(321, 321, 321)
                .addComponent(jLabel3)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Add)
                                .addGap(18, 18, 18)
                                .addComponent(Update)
                                .addGap(18, 18, 18)
                                .addComponent(Clear)
                                .addGap(18, 18, 18)
                                .addComponent(Delete)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AlamatPenjual, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NoHp, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NamaPenjual, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(NamaPenjual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(AlamatPenjual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(NoHp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Delete)
                    .addComponent(Update)
                    .addComponent(Clear))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NamaPenjualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaPenjualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaPenjualActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailActionPerformed

    private void AlamatPenjualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlamatPenjualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlamatPenjualActionPerformed

    private void NoHpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoHpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NoHpActionPerformed

    // menambahkan data
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        try {
            // membuat koneksi baru
            Koneksi ObjKoneksi = new Koneksi();
            Connection con = ObjKoneksi.koneksiDB();
            Statement st = con.createStatement();

            // Membuat query dan langsung mengisinya saat dipanggil
            String sql = "insert into tb_penjual(nama,alamat,email,no_hp, password) "
                    + "values ('" + NamaPenjual.getText() + "', '" + AlamatPenjual.getText() 
                    + "', '" + Email.getText()+ "', '" + NoHp.getText() + "','" + Password.getText() + "')";
            int row = st.executeUpdate(sql);  //eksekusi query sql

            if (row == 1) {
                // menampilkan UI pop up berhasil
                JOptionPane.showMessageDialog(null, "Sukses menambahkan barang", 
                        "Data Barang", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
//            menampilkan pop up eror
            JOptionPane.showMessageDialog(null, e, "Data Barang", 
                    JOptionPane.INFORMATION_MESSAGE);
//            menampilkan eror pada console
            System.out.println("gagal menambah kedalam database \n" + e);
        }
//        menampilkan table
        load_table();
    }//GEN-LAST:event_AddActionPerformed

    // menghapus data yang dipilih
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:\
        try {
            // membuat koneksi baru
            Koneksi ObjKoneksi = new Koneksi();
            Connection con = ObjKoneksi.koneksiDB();
            Statement st = con.createStatement();   
            // inisiasi sql statement
            String sql = "delete from tb_penjual where id_penjual = " + id_penjual;
            int row = st.executeUpdate(sql);
            
            if (row == 1) {
                // menampilkan UI pop up berhasil
                JOptionPane.showMessageDialog(null, "Data sukses dihapus", "Data Sepatu", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            // menampilkan UI pop up gagal
            JOptionPane.showMessageDialog(null, "Data gagal dihapus", "Data Sepatu", JOptionPane.ERROR_MESSAGE);
        }
        // menampilkan tabel
        load_table();
    }//GEN-LAST:event_DeleteActionPerformed

    // tombol kembali ke menu utama
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // membuat objek
        FormMaster fmkembali = new FormMaster();
        // menampilkan menu utama
        fmkembali.show();

        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // memilih data
    private void TbPenjualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbPenjualMouseClicked
        // TODO add your handling code here:
        // mengisi JTextField dengan data yang telah dipilih pada di Jtable
        id_penjual = TbPenjual.getValueAt(TbPenjual.getSelectedRow(), 0).toString();
        NamaPenjual.setText(TbPenjual.getValueAt(TbPenjual.getSelectedRow(), 1).toString());
        Email.setText(TbPenjual.getValueAt(TbPenjual.getSelectedRow(), 2).toString());
        AlamatPenjual.setText(TbPenjual.getValueAt(TbPenjual.getSelectedRow(), 3).toString());
        NoHp.setText(TbPenjual.getValueAt(TbPenjual.getSelectedRow(), 4).toString());

        // menampilkan data password
        Password.setText(TbPenjual.getValueAt(TbPenjual.getSelectedRow(), 5).toString());
        // menampilkan status pengeditan pada JTable
        boolean editTbl = TbPenjual.isEditing();
        if (editTbl == false) {
            // menampilkan UI pop up berhasil
            JOptionPane.showMessageDialog(null, "Sukses memilih Data Sepatu", "Data Sepatu", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_TbPenjualMouseClicked

    // mengupdate data
    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        try {
            // membuat koneksi baru
            Koneksi ObjKoneksi = new Koneksi();
            Connection con = ObjKoneksi.koneksiDB();
            Statement st = con.createStatement();
            // membuat statement SQL
            String sql = "update tb_penjual set nama='"+ NamaPenjual.getText() + 
                    "',password ='" + Password.getText() +
                    "', email ='" + Email.getText() + "',"+ "alamat ='" + AlamatPenjual.getText() + 
                    "',no_hp = " + NoHp.getText() +  " where id_penjual = " + id_penjual;

            // eksekusi SQL
            int row = st.executeUpdate(sql);
            if (row == 1) {
                // menampilkan UI pop up berhasil
                JOptionPane.showMessageDialog(null, "Sukses merubah data", "Data Sepatu", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            // menampilkan UI pop up gagal
            JOptionPane.showMessageDialog(null, e, "Data Sepatu", JOptionPane.ERROR_MESSAGE);
        }
        // menampilkan tabel pada JTable
        load_table();
    }//GEN-LAST:event_UpdateActionPerformed

    // mengosongkan semua JTextField
    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        // mengatur semua jenis JTextField menjadi null
        NamaPenjual.setText("");
        AlamatPenjual.setText("");
        Email.setText("");
        NoHp.setText("");
        Password.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPenjual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPenjual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPenjual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPenjual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPenjual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField AlamatPenjual;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField NamaPenjual;
    private javax.swing.JTextField NoHp;
    private javax.swing.JTextField Password;
    private javax.swing.JTable TbPenjual;
    private javax.swing.JButton Update;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
